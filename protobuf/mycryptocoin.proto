
// protobuf //

// mycryptocoin.proto
/*
Once you have included the .proto file in your project, you can then generate the corresponding code using a protocol buffer compiler (such as protoc). The generated code can be used to serialize and deserialize messages based on the defined protocol.

Make sure you have the necessary protocol buffer compiler and related tools installed, and then use the appropriate command to generate the code for your target language. The specific command may vary based on the programming language and tools you are using.

For example, to generate C# code from your .proto file, you can use the protoc compiler with the csharp_out option:

protoc --csharp_out=<output_directory> --proto_path=<protobuf_directory> <protobuf_directory>/your_proto_file.proto

Replace <output_directory> with the directory where you want to generate the C# code, and <protobuf_directory> with the actual path to your protobuf directory.

After generating the code, you can include it in your project and use the generated types and functions as needed to work with the protocol buffer messages defined in your .proto file.
*/
syntax = "proto3";

package mycryptocoin;

message Transaction {
  string id = 1;
  string sender = 2;
  string recipient = 3;
  double amount = 4;
  uint64 timestamp = 5;
}

message Block {
  uint64 index = 1;
  string previous_hash = 2;
  repeated Transaction transactions = 3;
  uint64 timestamp = 4;
}

message Blockchain {
  repeated Block blocks = 1;
}